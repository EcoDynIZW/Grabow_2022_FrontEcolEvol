---
title: "Red squirrel Berlin - Area interaction model"
author:
    - name: "Marius Grabow" 
      affiliation: Leibniz Institute for Zoo and Wildlife Research
      affiliation_url: https://izw-berlin.de/en/
      orcid_id: 0000-0003-0702-9642
date: "`r Sys.Date()`"
output: 
    distill::distill_article:
        highlight: kate      
        code_folding: false  
        toc: true            
        toc_depth: 2         
---

```{r setup, include=FALSE}
## You can ignore this chunk in most cases
## If you want to modify chunk options, you can do it here for all chunks or
## add the options in the repsective chunk header, e.g. `{r, message = FALSE}`
knitr::opts_chunk$set(echo = TRUE, warning = TRUE, message = TRUE,
                      fig.width = 9, fig.height = 6, dpi = 500, 
                      retina = 1)
```


# Setup

```{r packages, message=FALSE, warning=FALSE}

package.list=c("data.table",
               "lattice",
               "raster",
               "ROCR",
               "sp",
               "rgdal",
               "maptools",
               "maps",
               "foreign",
               "rgeos",
               "spatstat",
               "RColorBrewer",
               "spdep",
               "ppmlasso",
               "here",
               "tidyverse",
               "sf",
               "conflicted",
               "grainscape",
               "tmap")


#function that installs and loads the packages 

for (package in package.list) {
  if (!require(package, character.only=T, quietly=T)) {
    install.packages(package)
    library(package, character.only=T)
  }
}


conflict_prefer("extract","raster")

source(here("R","Optim Lasso Functions New.R"))
```

# Data preprocessing
```{r data}
study.region = "Berlin"
sp.res = 0.1
po<-readRDS(here("data-raw","citizen_science","sightings_processed.RDS"))
po_xy<-st_coordinates(po)
po_cov<-as.data.frame(extract(rs,po))
po_cov<-cbind(po_xy,po_cov)
po<-po_cov

all_xy<-xyFromCell(temp100,c(1:ncell(temp100)))
all_xy_df<-as.data.frame(xyFromCell(temp100,c(1:ncell(temp100))))
all_xy_df<-st_as_sf(all_xy_df,coords = c("x","y"))
occ<-as.data.frame(extract(rs,all_xy_df))
occ<-cbind(all_xy,occ)

#read camera trap locations
ct_location<-read.csv(here("data-raw",
                    "camera-trap",
                    "centroids_cameras_grid_25833.csv"))%>%
  st_as_sf(coords=c("xcoord_centroid_25833","ycoord_centroid_25833"),crs=25833)%>%
  st_transform(3035)
                    
ct_xy<-st_coordinates(ct_location)

ct_cell_number<-as.data.frame(extract(temp100,ct_location))
names(ct_cell_number)<-"cell_number"

y.occ<-ct_location[,21:24]


ct_cell_number<-cbind(ct_cell_number,y.occ)

y.occ<-plyr::join(cell_number,ct_cell_number,by="cell_number")
y.occ<-distinct(y.occ, cell_number, .keep_all = TRUE)
y.occ[is.na(y.occ)]<-0
y.occf <- y.occ[,c(-1,-2)]

size_vec<-y.occ$cell_number
occ2<-occ[c(size_vec),]
occ<-occ2
#remove all, but keep processed data needed for further analyses

#rm(list = ls()[!ls() %in% c("po","y.occf","occ")])
source(here("R","Optim Lasso Functions New.R"))

colnames(occ)<-colnames(po)
X.all  = rbind(po, occ) %>%na.omit()

#taking out the number of rows of each dataset
num.po = dim(po)[1] 
num.occ = dim(occ)[1] 

po.id  = 1:num.po
occ.id = (num.po + 1):(num.po + num.occ)

quad.id = occ.id

#recreating the datasets, now that we worked with it 
po = X.all[po.id,]
occ = X.all[occ.id,]
quad.dat = X.all[quad.id,]

# transform all covariates m -> km
quad.km = m_to_km(quad.dat)
po.km = m_to_km(po)
occ.km = m_to_km(occ)

#env_formula = ~ supply_green + distance_green + distance_streets + pop_density + imperviousness + multiple_burdens  + dist_old_tree + temp_04 + focal_green_capacity + focal_traffic_volume + focal_tree_coniferous
env_formula = ~distance_green+
                 distance_streets+
                 pop_density+
                 imperviousness+
                 dist_old_tree+
                 focal_green_capacity+
                focal_traffic_volume

bias_formula =  list(~distance_streets + pop_density,
                     ~distance_streets + pop_density)

# misc quantities to set up
n.fits = 1000 #number of fits
int.radius = 0.2
tol = 1.e-8
b.min = 1.e-6
link = "cloglog"

po.km$X <- round(po.km$X, 3)
po.km$Y <- round(po.km$Y, 3)
occ.km$X <- round(occ.km$X,3)
occ.km$Y <- round(occ.km$Y,3)
quad.km$X <- round(quad.km$X,3)
quad.km$Y <- round(quad.km$Y,3)

###why?
which(is.na(quad.km), arr.ind=TRUE)#90923:90924
quad.km<-na.omit(quad.km)
quad.km<-na.omit(quad.km)
occ.km<-na.omit(occ.km)
occ<-na.omit(occ)
quad.dat<-na.omit(quad.dat)
y.occf<-y.occf[-c(90923:90924),]


#taking out the number of rows of each dataset
num.po = dim(po)[1] 
num.occ = dim(occ)[1] 

po.id  = 1:num.po
occ.id = (num.po + 1):(num.po + num.occ)

quad.id = occ.id
```

#runs an analysis combining presence-only and occupancy 

```{r}
comb_ppm_area_interaction = comb.lasso_new(env_formula = env_formula,
                          bias_formula = bias_formula,
                          intercept_env = 1,
                          intercept_bias = list(NA, 1),
                          quad_data = quad.km,
                          sp_data = list(po.km, occ.km),#here the two datasets
                          sp_y = list(rep(1, length(po.id)), y.occf),
                          dat.type = c("PO", "Occ"), #specifying the two data types
                          coord = c("X", "Y"),
                          sp_res = 0.1, #resolution in km
                          penalty_vec = NULL,
                          alpha = 1, gamma = 0, init.coef = NA, standardise = TRUE,
                          family = "poisson", tol = tol, b.min = b.min,
                          max.it = 25, n.fits = n.fits, noshrink = NULL, method = "BFGS",
                          link = link, site.area = 0.01,
                          area.int = TRUE, r = int.radius)

```

***

<details><summary>Session Info</summary>

```{r sessionInfo}
## DO NOT REMOVE!
## We store the settings of your computer and the current versions of the
## packages used to allow for reproducibility
Sys.time()
#git2r::repository() ## uncomment if you are using GitHub
sessionInfo()
```

</details>

